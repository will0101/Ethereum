{"version":3,"sources":["web3/index.js","web3/lottery.js","App.js","reportWebVitals.js","index.js"],"names":["window","ethereum","request","method","web3","Web3","eth","Contract","App","useState","manager","setManager","players","setPlayers","balance","setBalace","ether","setEther","useEffect","a","lottery","methods","call","getPlayers","getBalance","options","address","x","className","JSON","stringify","length","htmlFor","type","value","onChange","e","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ogBAEAA,OAAOC,SAASC,QAAQ,CAAEC,OAAQ,wBAElC,IAEeC,EAFF,IAAIC,IAAKL,OAAOC,UCEd,MAAIG,EAAKE,IAAIC,SAHhB,CAAC,CAAC,UAAW,EAAK,OAAS,GAAG,KAAO,UAAU,QAAU,CAAC,CAAC,KAAO,GAAG,KAAO,YAAY,SAAU,EAAM,gBAAkB,OAAO,KAAO,YAAY,CAAC,UAAW,EAAM,OAAS,GAAG,KAAO,aAAa,QAAU,GAAG,SAAU,EAAM,gBAAkB,aAAa,KAAO,YAAY,CAAC,UAAW,EAAK,OAAS,GAAG,KAAO,aAAa,QAAU,CAAC,CAAC,KAAO,GAAG,KAAO,cAAc,SAAU,EAAM,gBAAkB,OAAO,KAAO,YAAY,CAAC,UAAW,EAAM,OAAS,GAAG,KAAO,QAAQ,QAAU,GAAG,SAAU,EAAK,gBAAkB,UAAU,KAAO,YAAY,CAAC,UAAW,EAAK,OAAS,CAAC,CAAC,KAAO,GAAG,KAAO,YAAY,KAAO,UAAU,QAAU,CAAC,CAAC,KAAO,GAAG,KAAO,YAAY,SAAU,EAAM,gBAAkB,OAAO,KAAO,YAAY,CAAC,OAAS,GAAG,SAAU,EAAM,gBAAkB,aAAa,KAAO,gBADnxB,8C,QCsDDC,MAjDf,WACE,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA6BJ,mBAAS,IAAtC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAA0BN,mBAAS,IAAnC,mBAAOO,EAAP,KAAcC,EAAd,KAmBA,OAbAC,qBAAU,WAAM,4CACd,gCAAAC,EAAA,sEACwBC,EAAQC,QAAQX,UAAUY,OADlD,cACQZ,EADR,gBAEwBU,EAAQC,QAAQE,aAAaD,OAFrD,cAEQV,EAFR,gBAGwBR,EAAKE,IAAIkB,WAAWJ,EAAQK,QAAQC,SAH5D,OAGQZ,EAHR,OAKEH,EAAWD,GACXG,EAAWD,GACXG,EAAUD,GAPZ,6CADc,uBAAC,WAAD,wBAUda,KACC,IAGD,sBAAKC,UAAU,MAAf,UACSC,KAAKC,UAAU,CAACpB,UAAQE,UAAQE,YAEvC,8CACA,6DAC+BJ,EAD/B,yBAEuBE,EAAQmB,OAF/B,kDAGkBjB,KAGlB,iCACE,wDACA,gCACE,uBAAOkB,QAAQ,QAAf,sCACA,uBAAOC,KAAK,OACZC,MAAOlB,EACPmB,SAlCR,SAA2BC,GACzBnB,EAASmB,EAAEC,OAAOH,aAoCd,kDCtCOI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.aa6b5461.chunk.js","sourcesContent":["import Web3 from \"web3\";\r\n\r\nwindow.ethereum.request({ method: \"eth_requestAccounts\" });\r\n \r\nconst web3 = new Web3(window.ethereum);\r\n \r\nexport default web3;","import web3 from '.'\r\n\r\nconst address = \"0x249e02DEfe8dC2f9cC35e49DFb16aA4A68E14359\"\r\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pickWinner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPlayers\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"enter\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"players\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]\r\n\r\n\r\nexport default new web3.eth.Contract(abi,address)","import './App.css';\n\nimport {useEffect, useState} from 'react'\n\nimport lottery from './web3/lottery'\nimport web3 from './web3'\n\nfunction App() {\n  const [manager, setManager] = useState('')\n  const [players, setPlayers] = useState([])\n  const [balance, setBalace] = useState('')\n  const [ether, setEther] = useState('')\n\n  function handleEtherChange(e) {\n    setEther(e.target.value)\n  }\n\n  useEffect(() => {\n    async function x() {\n      const manager = await lottery.methods.manager().call();\n      const players = await lottery.methods.getPlayers().call();\n      const balance = await web3.eth.getBalance(lottery.options.address);\n\n      setManager(manager)\n      setPlayers(players)\n      setBalace(balance)\n    }\n    x()\n  }, [])\n\n  return (\n    <div className=\"App\">\n            {JSON.stringify({manager,players,balance})}\n\n      <h1>Lottery Game</h1>\n      <p>\n        This contract is managed by {manager}.\n        There are currently {players.length} people entered in the contest.\n        The jackpot is {balance}\n      </p>\n\n      <form>\n        <h4>Want to try your luck?</h4>\n        <div>\n          <label htmlFor=\"ether\">Amount of ether to enter</label>\n          <input type=\"text\"\n          value={ether}\n          onChange={handleEtherChange}\n          />\n        </div>\n        <button>Enter</button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}